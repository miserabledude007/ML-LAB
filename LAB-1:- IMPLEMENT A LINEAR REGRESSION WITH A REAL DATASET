import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

# Set random seed for reproducibility
np.random.seed(42)

# Load dataset
boston_data = pd.read_csv("https://raw.githubusercontent.com/dphi-official/Datasets/master/Boston_Housing/Training_set_boston.csv")

# Separate input and output features
X = boston_data.drop('MEDV', axis=1)
y = boston_data.MEDV

# Split the data into training and testing sets with a fixed random state
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Define and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on training and testing data
y_train_pred = model.predict(X_train)
y_test_pred = model.predict(X_test)

# Calculate R^2 score for training and testing data
train_accuracy = r2_score(y_train, y_train_pred)
test_accuracy = r2_score(y_test, y_test_pred)

# Print results in the required format
print("Using Linear Regression")
print(f"Training data accuracy: {train_accuracy}")
print(f"Testing data accuracy: {test_accuracy}")
